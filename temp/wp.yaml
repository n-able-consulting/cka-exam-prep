apiVersion: v1
kind: Namespace
metadata:
  name: wordpress
  labels:
    name: wordpress
    app: wordpress
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-password
  namespace: wordpress
type: Opaque
data:
  password: d3B1c2VyQA==
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: wordpress
  labels:
    app: mysql
    tier: backoffice
    chain: example-wordpress
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
    tier: backoffice
    chain: example-wordpress
  clusterIP: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: wordpress
  labels:
    app: mysql
    tier: backoffice
    chain: example-wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-wordpress-mysql
  namespace: wordpress
  labels:
      app: mysql
      tier: backoffice
      chain: example-wordpress
spec:
  selector:
    matchLabels:
      app: mysql
      tier: backoffice
      chain: example-wordpress
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
        tier: backoffice
        chain: example-wordpress
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: password
        - name: MYSQL_DATABASE
          value: wordpress
        - name: MYSQL_USER
          value: wordpress
        - name:  MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: wordpress
  labels:
    app: wordpress
    tier: frontoffice
    chain: example-wordpress
spec:
  ports:
    - port: 80
      nodePort: 32555
  selector:
    app: wordpress
    tier: frontoffice
    chain: example-wordpress
  type: NodePort
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pvc
  namespace: wordpress
  labels:
    app: wordpress
    tier: frontoffice
    chain: example-wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: example-wordpress-wordpress
  namespace: wordpress
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: frontoffice
      chain: example-wordpress
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontoffice
        chain: example-wordpress
    spec:
      containers:
      - image: wordpress:latest
        name: wordpress
        env:
        - name: WORDPRESS_DB_HOST
          value: mysql-service
        - name: WORDPRESS_DB_NAME
          value: wordpress
        - name: WORDPRESS_DB_USER
          value: wordpress
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: password
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wp-pvc
